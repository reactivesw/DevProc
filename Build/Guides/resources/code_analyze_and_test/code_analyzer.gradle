apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "checkstyle"
apply plugin: "pmd"
apply plugin: "findbugs"

repositories {
    maven { url "http://jcenter.bintray.com" }
    maven { url "https://repo.maven.apache.org/maven2" }
}

/*************checkstyle(use google java style)***************/
checkstyle.toolVersion='6.15'
checkstyle{
    /*source = fileTree('src')*/
    ignoreFailures = false
    sourceSets = [sourceSets.main]
    configFile = 'code_analyze_and_test/config/checkstyle/checkstyle.xml' as File
    //exclude the package you do not want to check
    checkstyleMain.exclude 'io/reactivesw/customerauthentication/infrastructure/grpc/**'
}


/*************PMD(Project Manager Design)***************/
pmd  {
    ignoreFailures=false
    ruleSets=[
        /*'Java-android',*/
        'java-basic',
        'java-braces',
        'java-clone',
        'java-codesize',
        //'java-comments',
        'java-controversial',
        'java-coupling',
        'java-design',
        'java-empty',
        'java-finalizers',
        'java-imports',
        'java-j2ee',
        'java-javabeans',
        'java-junit',
        'java-logging-jakarta-commons',
        'java-logging-java',
        'java-migrating',
        'java-naming',
        'java-optimizations',
        'java-strictexception',
        'java-strings',
        'java-sunsecure',
        'java-typeresolution',
        'java-unnecessary',
        'java-unusedcode'
    ]
    /*source = fileTree('src')*/
    sourceSets = [sourceSets.main]
}
tasks.withType(Pmd) {  //exclude the package you do not want to check
    exclude 'io/reactivesw/customerauthentication/infrastructure/grpc/**'  }



/*************find bug***************/
findbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    effort = "max"
    reportLevel = "medium"
}
tasks.withType(FindBugs) {
    //exclude the package you do not want to check
    classes = classes.filter {
        !it.path.contains('io/reactivesw/customerauthentication/infrastructure/grpc/')
    }
    reports {
        xml.enabled false
        html.enabled true
        /*html.stylesheet resources.text.fromFile('config/xsl/findbugs-custom.xsl')*/
        html { destination "build/reports/findbugs/findbugs.html" }
    }
}


task wrapper(type: Wrapper){ gradleVersion='3.0' }
